services:
  db:
    image: postgres:17.0
    hostname: ${DB_HOST}
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 3s
      timeout: 5s
      retries: 10

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:5173}
      - FORTY_TWO_CLIENT_ID=${FORTY_TWO_CLIENT_ID:-}
      - FORTY_TWO_CLIENT_SECRET=${FORTY_TWO_CLIENT_SECRET:-}
      - FORTY_TWO_CALLBACK_URL=${FORTY_TWO_CALLBACK_URL:-}
    ports:
      - "3000:3000"
    depends_on:
      - db
    volumes:
      - ./server:/app
      - /app/node_modules

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server

  drizzle-studio:
    container_name: red-tetris-drizzle-studio-dev
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    working_dir: /app
    ports:
      - "4983:4983"
    environment:
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./server:/app
      - /app/node_modules
    command: sh -lc "npm install --quiet && npx -y drizzle-kit@0.31.5 studio --config drizzle.config.js --host 0.0.0.0 --port 4983"
    restart: unless-stopped

volumes:
  pgdata:
  drizzle-node_modules:
